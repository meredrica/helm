nameOverride: # defaults to .Chart.Name
restart: "Always"
version: # defaults to .Chart.Version

meta: # added to all objects
  annotations:
    meta: annotation
  labels:
    meta: label

volumeClaims:
  "claimName":
    meta:
      annotations:
        volume: annotation
      labels:
        volume: label
    acccessMode: "ReadWriteOnce" # default
    storage: "500Mi"
    class: "some-class"

secrets:
  "secretName":
    immutable: false
    meta:
      annotations:
        secret: annotation
      labels:
        secret: label
    strings:
      "key": |
         some sting value
         possibly multiline
    files: # to include a file, you need to copy the template to your chart/templates folder. this is a helm limitation
      "key2": test/secrets/file.secret
      "key3": test/secrets/image.jpg

configmaps:
  "configmapName":
    meta:
      annotations:
        configmap: annotation
      labels:
        configmap: label
    data:
      "key": value
      "key2": value2
    files: # to include a file, you need to copy the template to your chart/templates folder. this is a helm limitation
      "key3": test/configMap/test.yml
      "key4": test/configMap/img.png

pod: # the main pod
  "mainPod":
    image: nginx
    tag: # defaults to latest
    policy: "IfNotPresent" # imagePullPolicy
    cpu:
      min: 100m
      max: 200m
    memory:
      min: 100Mi
      max: 110Mi

    command: # startup command
      - echo
    args: # startup args
      - $NAME
      - $raw-from
    ports:
      "port-name":
        port: 80
        protocol: "TCP"
    env:
      "NAME": "SOME_ENV_VALUE"
      "some-number": 0 # auto stringification
      "raw-from": # passed raw. see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    health:
      live: # a probe spec, passed raw. see https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
        httpGet:
          port: 80
          path: "/"
      ready: # a probe spec, passed raw. defaults to live
        httpGet:
          port: 80
          path: "/ready"
      start: # a probe spec, passed raw. defaults to live
        httpGet:
          port: 80
          path: "/start"
    restart: "Always" # restartPolicy
    mounts: # mounts
      volumes:
        "volumename":
          path: "/some/path"
          readOnly: true
          subPath: ".something"
        "other": "/to/this/path"
      secrets:
        "secretname": "/secret/path"
      configmaps:
        "configmapname": "/configmap/path"
    security: # supports the full security context, see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1
      privileged: true
    raw: # passed raw into the container spec
init:
  # podspec for initing the deployment
  "foo":
    image: busybox
    tag: # defaults to latest
    command:
      - true
test:
  # podspec as above, used for helm test

deployment:
  meta:
    labels:
      "deployment": "label"
    annotations:
      "deployment": "annotation"
  template:
    meta:
      labels:
        "template": "label"
      annotations:
        "template": "annotation"
    serviceAccount: "someaccount"
  strategy: "RollingUpdate" # default is rolling
  minReadySeconds: 0 # minimum ready seconds
  autoscaling:
    meta:
      annotations:
        "autoscaling": "annotation"
      labels:
        "autoscaling": "label"
    minReplicas: 1 # default is 1
    maxReplicas: 10 # no default
    targetCPU: 80 # default is 80
    targetMemory: 80 # default is 80

statefulset:
  name: "statefulsetname"
  meta:
    annotations:
      "statefulset": "annotation"
    labels:
      "statefulset": "label"
  template:
    meta:
      labels:
        "template": "label"
      annotations:
        "template": "annotations"
  replicas: 1
  policy: "OrderedReady"
  strategy: "RollingUpdate"
  minReadySeconds: # minimum ready seconds

services:
  "someservice":
    type: "ClusterIP"
    ports:
      "name":
        port: 80
        target: 80 # defaults to port
        protocol: "tcp"
      "port2":
        port: 80
        target: 80 # defaults to port
        protocol: "tcp"
        nodePort: 30000 # not set by default, only makes sense for "NodePort" services
  meta:
    annotations:
      "service": "annotation"
    labels:
      "service": "label"

cronjobs:
  "name":
    meta:
      annotations:
        "cronjob": "annotation"
      labels:
        "cronjob": "label"

    schedule: "@midnight" # default is midnight
    restartPolicy: "OnFailure" # default is OnFailure. can be "Never" too
    pod: # podspec like above
      "echo":
        image: busybox
        command:
          - echo
        args:
          - "hello"

ingress:
  "name":
    tls: 'tls-secret' # optional, if set, creates the tls entries
    meta:
      annotations:
        "ingress": "annotation"
      labels:
        "ingress": "label"
    hosts:
      "host.of.app":
          "/":
            type: "Prefix"
            to: "servicename"
            port: 8080
